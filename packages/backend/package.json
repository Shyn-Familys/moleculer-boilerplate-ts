{
  "name": "@app/backend",
  "version": "0.1.0",
  "description": "Target Backend",
  "author": "Luc <luc@ltv.vn>",
  "license": "MIT",
  "scripts": {
    "serve": "export NODE_PATH=./ && node -r ts-node/register node_modules/.bin/moleculer-runner --hot --repl --envfile=dev.env services --mask **/*.service.ts --config moleculer.config.ts",
    "start:prod": "moleculer-runner --env --mask **/*.service.js --config moleculer.config.js",
    "test:unit": "jest --coverage --forceExit",
    "build": "rimraf dist/* && webpack --node-args='--stack_size=6144 --max-old-space-size=6144' --progress --colors",
    "test": "jest --forceExit",
    "migrate:save": "prisma migrate save --name init --experimental --schema prisma/schema.prisma",
    "migrate": "prisma migrate up --experimental",
    "generate": "prisma generate --schema prisma/schema.prisma",
    "generate:graphql": "export NODE_PATH=./ && node -r dotenv/config -r ts-node/register ./graphql/generator.ts dotenv_config_path=dev.env",
    "preserve": "yarn generate:graphql && prisma generate --schema prisma/schema.prisma",
    "preinstall": "cat dev.env | grep DATABASE_URL | tee > prisma/.env",
    "postinstall": "yarn migrate:save && yarn migrate"
  },
  "resolutions": {
    "graphql": "14.7.0"
  },
  "dependencies": {
    "@app/types": "*",
    "@ltv/moleculer-core": "^0.2.20",
    "@prisma/client": "^2.5.1",
    "@typegoose/typegoose": "^7.2.0",
    "bcrypt": "^3.0.6",
    "cookie": "^0.4.1",
    "dotenv": "^8.0.0",
    "firebase-admin": "^9.1.1",
    "graphql": "14.7.0",
    "helmet": "^3.21.2",
    "ioredis": "^4.14.1",
    "jsonwebtoken": "^8.5.1",
    "lodash.flattendeep": "^4.4.0",
    "lodash.isarray": "^4.0.0",
    "lodash.isequal": "^4.5.0",
    "lodash.isfunction": "^3.0.9",
    "lodash.isobject": "^3.0.2",
    "lodash.isstring": "^4.0.1",
    "lodash.pick": "^4.4.0",
    "lodash.uniqby": "^4.7.0",
    "moleculer": "^0.14.8",
    "moleculer-apollo-server": "^0.3.3",
    "moleculer-db": "^0.8.7",
    "moleculer-db-adapter-mongoose": "^0.8.4",
    "moleculer-decorators": "^1.2.0",
    "moleculer-web": "^0.10.0-beta1",
    "mongoose": "^5.9.18",
    "nats": "^1.4.0",
    "passport": "^0.4.1",
    "postgraphile": "4.9.0",
    "postgraphile-plugin-connection-filter": "^2.0.0",
    "redlock": "^4.1.0"
  },
  "devDependencies": {
    "@prisma/cli": "^2.6.2",
    "@types/apollo-upload-client": "^14.1.0",
    "@types/bcrypt": "^3.0.0",
    "@types/cookie": "^0.4.0",
    "@types/helmet": "^0.0.45",
    "@types/jest": "^25.1.4",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/lodash.flattendeep": "^4.4.6",
    "@types/lodash.forin": "^4.4.6",
    "@types/lodash.isarray": "^4.0.6",
    "@types/lodash.isequal": "^4.5.5",
    "@types/lodash.isfunction": "^3.0.6",
    "@types/lodash.isobject": "^3.0.6",
    "@types/lodash.isstring": "^4.0.6",
    "@types/lodash.pick": "^4.4.6",
    "@types/lodash.uniqby": "^4.7.6",
    "@types/mongodb": "^3.5.20",
    "@types/mongoose": "^5.7.22",
    "@types/node": "13.7.0",
    "@types/passport": "^1.0.4",
    "copy-webpack-plugin": "^5.1.1",
    "dotenv-cli": "^3.2.0",
    "jest": "^25.1.0",
    "jest-cli": "^25.1.0",
    "lodash.forin": "^4.4.0",
    "moleculer-repl": "^0.6.2",
    "nodemon": "^2.0.2",
    "ts-jest": "^25.2.0",
    "ts-loader": "^6.2.1",
    "ts-node": "^8.6.2",
    "tslint": "^6.1.3",
    "typescript": "^3.7.5",
    "webpack": "^4.41.6",
    "webpack-cli": "^3.3.11"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "^tests/(.*)$": "<rootDir>/tests/$1",
      "^utils/(.*)$": "<rootDir>/utils/$1",
      "^mixins/(.*)$": "<rootDir>/mixins/$1",
      "^middlewares/(.*)$": "<rootDir>/middlewares/$1",
      "^services/(.*)$": "<rootDir>/services/$1",
      "^errors/(.*)$": "<rootDir>/errors/$1",
      "^tests$": "<rootDir>/tests/index.ts",
      "^utils$": "<rootDir>/utils/index.ts",
      "^mixins$": "<rootDir>/mixins/index.ts",
      "^middlewares$": "<rootDir>/middlewares/index.ts",
      "^services$": "<rootDir>/services/index.ts",
      "^errors$": "<rootDir>/errors/index.ts"
    },
    "collectCoverage": true,
    "coverageReporters": [
      "json",
      "html",
      "lcov",
      "text"
    ],
    "coverageDirectory": "coverage",
    "collectCoverageFrom": [
      "services/**/*.ts",
      "middlewares/**/*.ts",
      "mixins/**/*.ts",
      "utils/**/*.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 90,
        "functions": 90,
        "lines": 90,
        "statements": 90
      }
    },
    "verbose": true,
    "setupFiles": [
      "<rootDir>/jest.setup.js"
    ]
  }
}
